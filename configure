#!/bin/bash
#change the script interpreter from default sh (maybe DASH) to BASH /* PABLO changed 2019-10-01 */


set -e

SOC=mt7623n
MACH=mt7623_evb
PLATFORM=
BOARD=
TOPDIR=`pwd`
TARGET_PLATFORM="mediatek"
TARGET_PRODUCT="bpi-r2"
BPILINUX=linxu-mt
BPIPACK=mt-pack
BPISOC=mtk

CUR_DIR=$PWD

#I18N message for this shell script /* PABLO added 2019-10-01 */
declare -A message_en_US
declare -A message_zh_TW
declare -A all_message

message_en_US=(
	[OK]="$1 configured. Now run \`make\`"
	[ALREADY_EXIST]="environment file alread exist, do nothing."
	[FAIL]="$1 configure failed."
	[FORCE]="-f: force to generate the board environment shell script file"
	[BOARD_LIST]="supported boards:"
)
message_zh_TW=(
	[OK]="$1 設定成功. 請繼續執行 \`make\`"
	[ALREADY_EXIST]="設定檔已存在，啥事也沒做"
	[FAIL]="$1 設定失敗"
	[FORCE]="-f: 強迫產生設定檔"
	[BOARD_LIST]="所支援的板子:"
)
all_message=([en_US]=message_en_US [zh_TW]=message_zh_TW)

i18n_message() {
declare -A language

	I18N=${LANGUAGE%%:*}
	I18N=${I18N:-en_US}
	language=${all_message[$I18N]}
	eval message=\${$language[$1]}
	echo $message
}

list_boards() {
	(cd ${BPIPACK}/${BPISOC}/${TARGET_PRODUCT}/configs ; ls -1d BPI* )
}

# keep the output `sh` friendly
# i.e., no spaces around the '='
generate_board_mk() {
	
	cat <<-EOT
	BOARD=$BOARD
	SOC=$SOC
	MACH=$MACH
	UBOOT_CONFIG=${MACH}_config
	KERNEL_CONFIG=mt7623n_bananapi_r2_defconfig
	TARGET_PLATFORM=${TARGET_PLATFORM}
	EOT

}


generate_board_envsh() {
	
	cat <<-EOT
	export ARCH=arm
	export BOARD=$BOARD
	export SOC=$SOC
	export MACH=$MACH
	export CROSS_COMPILE=arm-linux-gnueabihf-
	export UBOOT_CONFIG=${MACH}_config
	export KERNEL_CONFIG=mt7623n_bananapi_r2_defconfig
	export LICHEE_PLATFORM="linux"
	export GPU_TYPE="mali450"
	export TOPDIR=${TOPDIR}
	export TARGET_PLATFORM=${TARGET_PLATFORM}
	export TARGET_PRODUCT=${TARGET_PRODUCT}
	EOT

}

usage() {
	echo "Usage: $0 <board> [-f]"
	echo -ne "\t"
	i18n_message "FORCE"
	i18n_message "BOARD_LIST"

	list_boards  #DK, update later
}

if [ $# -eq 0 ]; then
	usage
	exit 1
fi
if [ $# -eq 2 -a "-f" != "$2" ]; then
	usage
	exit 1
fi


BOARD=$1
FORCE=$2

if [ ! -e env.sh -o -n "$FORCE" ]; then
	generate_board_envsh "$1" > env.sh

	out=chosen_board.mk
	if generate_board_mk "$1" > $out~; then
		mv $out~ $out
		i18n_message "OK"
	else
		rm $out~
		i18n_message "FAIL"
		exit 1
	fi
else
	i18n_message "ALREADY_EXIST"
fi
